{"version":3,"sources":["components/Button/index.js","redux/types/index.js","redux/actions/index.js","components/Card/index.js","components/Itemlist/index.js","components/Itempage/index.js","components/Headerlogo/index.js","components/Header/index.js","components/App/App.js","reportWebVitals.js","redux/reducer/index.js","index.js"],"names":["Button","bgc","type","text","btnClName","onClick","style","backgroundColor","className","CATEGORY_REQUEST_STARTED","CATEGORY_REQUEST_SUCCESS","CATEGORY_REQUEST_FAILURE","JOKE_REQUEST_STARTED","JOKE_REQUEST_SUCCESS","JOKE_REQUEST_FAILURE","jokeRequestStarted","jokeRequestSuccess","joke","payload","jokeRequestFailure","error","categoryRequest","dispatch","axios","get","then","res","categories","data","catch","err","message","jokeRequestRandom","Card","category","useDispatch","Itemlist","map","item","index","Itempage","useEffect","useSelector","store","Headerlogo","icon_url","src","alt","Header","App","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialStore","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","action","loading","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f13e274.chunk.js","sourcesContent":["const Button = ({\n  bgc = 'black',\n  type = 'button',\n  text = 'Button',\n  btnClName = 'button',\n  onClick = () => {},\n}) => {\n  return (\n    <button\n      type={type}\n      onClick={() => {\n        onClick();\n      }}\n      style={{\n        backgroundColor: bgc,\n      }}\n      className={btnClName}\n    >\n      {text}\n    </button>\n  );\n};\n\nexport default Button;\n","export const CATEGORY_REQUEST_STARTED = 'CATEGORY_REQUEST_STARTED';\nexport const CATEGORY_REQUEST_SUCCESS = 'CATEGORY_REQUEST_SUCCESS';\nexport const CATEGORY_REQUEST_FAILURE = 'CATEGORY_REQUEST_FAILURE';\n\nexport const JOKE_REQUEST_STARTED = 'JOKE_REQUEST_STARTED';\nexport const JOKE_REQUEST_SUCCESS = 'JOKE_REQUEST_SUCCESS ';\nexport const JOKE_REQUEST_FAILURE = 'JOKE_REQUEST_FAILURE';\n","import {\n  CATEGORY_REQUEST_STARTED,\n  CATEGORY_REQUEST_SUCCESS,\n  CATEGORY_REQUEST_FAILURE,\n  JOKE_REQUEST_STARTED,\n  JOKE_REQUEST_SUCCESS,\n  JOKE_REQUEST_FAILURE,\n} from '../types';\nimport axios from 'axios';\n//обработка запроса категорий\nexport const categoryRequestStarted = () => ({\n  type: CATEGORY_REQUEST_STARTED,\n});\n\nexport const categoryRequestSuccess = (categories) => ({\n  type: CATEGORY_REQUEST_SUCCESS,\n  payload: categories,\n});\n\nexport const categoryRequestFailure = (error) => ({\n  type: CATEGORY_REQUEST_FAILURE,\n  payload: error,\n});\n\n// ============\n//обработка запроса добавление шутки\nexport const jokeRequestStarted = () => ({\n  type: JOKE_REQUEST_STARTED,\n});\n\nexport const jokeRequestSuccess = (joke) => ({\n  type: JOKE_REQUEST_SUCCESS,\n  payload: joke,\n});\n\nexport const jokeRequestFailure = (error) => ({\n  type: JOKE_REQUEST_FAILURE,\n  payload: error,\n});\n\n//запрос категорий\nexport const categoryRequest = () => {\n  return (dispatch) => {\n    dispatch(categoryRequestStarted());\n\n    axios\n      .get('https://api.chucknorris.io/jokes/categories', [])\n      .then((res) => {\n        dispatch(categoryRequestSuccess(res.data));\n      })\n      .catch((err) => {\n        dispatch(categoryRequestFailure(err.message));\n      });\n  };\n};\n\n//запрос рандомной шутки\nexport const jokeRequestRandom = () => {\n  return (dispatch) => {\n    dispatch(jokeRequestStarted());\n\n    axios\n      .get('https://api.chucknorris.io/jokes/random', [])\n      .then((res) => {\n        dispatch(jokeRequestSuccess(res.data));\n      })\n      .catch((err) => {\n        dispatch(jokeRequestFailure(err.message));\n      });\n  };\n};\n\n//запрос шутки по категории\nexport const jokeRequest = (data) => {\n  return (dispatch) => {\n    dispatch(jokeRequestStarted());\n\n    axios\n      .get(`https://api.chucknorris.io/jokes/random?category=${data}`, [])\n      .then((res) => {\n        dispatch(jokeRequestSuccess(res.data));\n      })\n      .catch((err) => {\n        dispatch(jokeRequestFailure(err.message));\n      });\n  };\n};\n","import '../../_variables.scss';\nimport Button from '../Button';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { jokeRequest } from '../../redux/actions';\n\nfunction Card({ category: categories = [] }) {\n  const dispatch = useDispatch();\n  return (\n    <Button\n      text={categories}\n      bgc='#FFFFFF'\n      onClick={() => {\n        dispatch(jokeRequest(categories)); //запос на вызов следующей шутки из соответсвующей категории\n      }}\n      btnClName='button '\n    />\n  );\n}\n\nexport default Card;\n","import Card from '../Card';\nimport React from 'react';\n\nfunction Itemlist({ category = [] }) {\n  return (\n    <>\n      {category.map((item, index) => {\n        return <Card category={item} key={index} />;\n      })}\n    </>\n  );\n}\n\nexport default Itemlist;\n","import React from 'react';\nimport Itemlist from '../Itemlist';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { categoryRequest } from '../../redux/actions';\n\nfunction Itempage() {\n  const dispatch = useDispatch();\n  //запрс категорий на сервере\n  useEffect(() => {\n    dispatch(categoryRequest());\n  }, [dispatch]);\n\n  //получение категорий из Сторы\n  const categories = useSelector((store) => {\n    return store.categories;\n  });\n  return <Itemlist category={categories} />;\n}\nexport default Itempage;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nfunction Headerlogo() {\n  const data = useSelector((store) => {\n    return store.data;\n  });\n  const { icon_url } = data;\n  return (\n    <div className='header-topmenu__logo'>\n      <img\n        className='header-topmenu__logo__icon'\n        src={icon_url}\n        alt='just logo'\n      />\n      <span className='header-topmenu__logo__text'>Chuck Norris</span>\n    </div>\n  );\n}\n\nexport default Headerlogo;\n","import '../Header/style.scss';\nimport Headerlogo from '../Headerlogo';\n\nfunction Header() {\n  return (\n    <header className='header'>\n      <div className='container container__header'>\n        <div className='header-topmenu'>\n          <Headerlogo />\n        </div>\n      </div>\n    </header>\n  );\n}\nexport default Header;\n","import React from 'react';\nimport Itempage from '../Itempage';\nimport Header from '../Header';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { jokeRequestRandom } from '../../redux/actions';\nimport Button from '../Button';\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(jokeRequestRandom());\n  }, [dispatch]);\n\n  const data = useSelector((store) => {\n    return store.data;\n  }); //получение данных из store\n\n  return (\n    <div className='App'>\n      <div className='main__container'>\n        <Header />\n        <div className='page__container'>\n          <h1 className='page__title'>Categories</h1>\n          <div className='cards'>\n            <Itempage />\n            <Button\n              text='random'\n              bgc='#FFFFFF'\n              onClick={() => {\n                dispatch(jokeRequestRandom()); //вызов следующей шутки\n              }}\n              btnClName='button card__button'\n            />\n          </div>\n          <div className='page__text'>{data.value}</div>\n          <div className='page__img'>\n            <img\n              src='https://res.cloudinary.com/dllgerabj/image/upload/v1629488520/goodfood/chuck%20norris/chucknorris_mplzfz.png'\n              alt='Chuck Norris'\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport {\n  CATEGORY_REQUEST_STARTED,\n  CATEGORY_REQUEST_SUCCESS,\n  CATEGORY_REQUEST_FAILURE,\n  JOKE_REQUEST_STARTED,\n  JOKE_REQUEST_SUCCESS,\n  JOKE_REQUEST_FAILURE,\n} from '../types';\n\nconst initialStore = {\n  data: [],\n  categories: [],\n};\n\nfunction rootReducer(store = initialStore, action) {\n  switch (action.type) {\n    // ======== добавление категорий\n    case CATEGORY_REQUEST_STARTED:\n      return {\n        ...store,\n        loading: true,\n      };\n    case CATEGORY_REQUEST_SUCCESS:\n      return {\n        ...store,\n        loading: false,\n        categories: action.payload,\n      };\n    case CATEGORY_REQUEST_FAILURE:\n      return {\n        ...store,\n        loading: false,\n        error: action.payload,\n      };\n    // ======== добавление шутки\n    case JOKE_REQUEST_STARTED:\n      return {\n        ...store,\n        loading: true,\n      };\n    case JOKE_REQUEST_SUCCESS:\n      return {\n        ...store,\n        loading: false,\n        data: action.payload,\n      };\n    case JOKE_REQUEST_FAILURE:\n      return {\n        ...store,\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return store;\n  }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nlet store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}